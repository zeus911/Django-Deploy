###  Settings file for the deploy.py script
###  Options specified as dictionay key+values for the options dictionary,
###  and file is imported

###  This file wrappers the base options and settings used by the deploy.py
###  deploy.py script for a site.  It assumes that each homedir is a separate
###  code base, with a separate repository, and that separate stackdirs will
###  have separate deploy_settings.py and git_settings.py files.  Also
###  assumes that the user is calling the file from either the homedir or
###  below, or from a common bin area for the user, with the settings files
###  in a .deploy.py directory in the users home directory.

import os, sys

#  options is a container dictionary.  All setting variables are placed
#  inside of it, and it gets punted around like a football.
options = {}

#  homedir is the home directory everything else is relative to
#options['homedir'] = os.getcwd()
options['homedir'] = '/home/dracus/Projects'

#  savedir is the directory exported files are saved to, or imported
#  files are imported from.  Usually, a temporary file area.
options['savedir'] = options['homedir']+'/save'

#  stackdir is the directory that stacks are stored under.  Has a
#  separate directory structure for isolation.  Each directory under
#  this directory is a separate stack.  There is also a settings file
#  for each stack in this directory, of the name '[stack]_settings.py'.
#  The settings files are imported options for that stack.
options['stackdir'] = options['homedir']+'/stack'

#  format is the output format for db exports.  Can be json or xml,
#  rarely can by yaml
options['db_format'] = 'json'

#  filename is the file name for any number of optional files, usually
#  the file used for DB exports and imports.  Gets set on cmd line.
options['filename']  = ''

#  stack is the default stack to work upon.  Normally, this is reset at
#  the command line
options['stack'] = 'test'

#  connector is the type of connection used to connect the Django server
#  to the outside world.  Can be 'wsgi', 'port', or 'both'.  The 'port'
#  and 'both' options set the port option on the server, and set the 
#  server running as a background process.  The 'wsgi' and 'both' options
#  create a set of wsgi descriptors in a file to be loaded by Apache or
#  some other web server.
options['connector'] = 'both'

#  apache dir is the directory where the Apache web server keeps its
#  configuration files.  Usually, it is '/etc/httpd/conf', but is set
#  to the temporary deploy directory to prevent overwriting existing files.
options['apache_dir'] = options['homedir']+'/tmp'

#  python path is the path to the python libraries used by 
options['python_path'] = '/home/gbeadmin/webapps/gbetest/lib/python2.7'

#  wsgi path is the path to the python libraries used by mod_wsgi, and
#  is usually identical to the python path
options['wsgi_path'] = options['python_path']

#  wsgi_options is a dictionary of text blobs used to build the wsgi.conf
#  file for the Apache web server.  'base_options' are the options common
#  to all of the wsgi connector, and occur at the beginning of the
#  wsgi.conf file.  'main_site' are all of the setting for the main
#  site that gets attached to the root URL.  It is assumed to be fairly
#  static.  Leave it blank, and set 'main_stack' to be the name of the
#  deployed stack attached to the root URL, or set to False to use the
#  main_stack text.  Leave both unset or False, and there will be no
#  application attached to the root URL.

#  Yes, I decided to handle the WSGI options in this way after a long day
#  coding.

options['wsgi_options'] = {
    'base_options': '''
###  Configuration file for mod_wsgi.  Autogenerated by Django Deploy.

WSGIRestrictEmbedded On
WSGILazyInitialization On

''',
    'main_site': '''
###  Main Site (do not alter)
WSGIProcessGroup gbetest
WSGIPythonPath /home/gbeadmin/webapps/gbetest/expo:/home/gbeadmin/webapps/gbetest/lib/python2.7
WSGIDaemonProcess gbetest \
    processes=2 threads=4 \
    python-path=/home/gbeadmin/webapps/gbetest:/home/gbeadmin/webapps/gbetest/expo:/home/gbeadmin/webapps/gbetest/lib/python2.7
WSGIScriptAlias / /home/gbeadmin/webapps/gbetest/expo/expo/wsgi.py process-group=gbetest application-group=%{GLOBAL}
WSGIScriptReloading On

''',
    'main_stack': False,
}

#  cfgdir is a central directory for settings and configuration files
#  only set it if you create one
if os.path.isdir(os.environ['HOME']+'/.django-deploy'):
    options['cfgdir'] = os.environ['HOME']+'/.django-deploy'
else:
    options['cfgdir'] = options['stackdir']
